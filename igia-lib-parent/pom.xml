<?xml version="1.0" encoding="UTF-8"?>
<!--

    This Source Code Form is subject to the terms of the Mozilla Public License, v.
    2.0 with a Healthcare Disclaimer.
    A copy of the Mozilla Public License, v. 2.0 with the Healthcare Disclaimer can
    be found under the top level directory, named LICENSE.
    If a copy of the MPL was not distributed with this file, You can obtain one at
    http://mozilla.org/MPL/2.0/.
    If a copy of the Healthcare Disclaimer was not distributed with this file, You
    can obtain one at the project website https://github.com/igia.

    Copyright (C) 2018-2019 Persistent Systems, Inc.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.igia</groupId>
    <artifactId>igia-lib-parent</artifactId>
    <packaging>pom</packaging>
    <name>igia-lib-parent</name>
    <description>igia server side lib parent</description>
    <version>0.3.0</version>

    <dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from JHipster -->
		        <groupId>io.github.jhipster</groupId>
		        <artifactId>jhipster-dependencies</artifactId>
		        <version>2.0.25</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
    <properties>
        <!-- The jhipster-framework version should be the same as the artifact version above -->
        <jhipster-framework.version>2.0.25</jhipster-framework.version>
        <!-- The spring-boot version should be the same as the parent version above -->
        <spring-boot.version>2.0.6.RELEASE</spring-boot.version>

        <!-- Build properties -->
        <java.version>1.8</java.version>
        <maven.version>3.0.0</maven.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Sonar properties -->
        <sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <sonar.sources>${project.basedir}/src/main/</sonar.sources>
        <sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
        <sonar.tests>${project.basedir}/src/test/</sonar.tests>

        <!-- Plugin versions -->
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
        <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.21.0</maven-surefire-plugin.version>
        <jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
        <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <sonar-maven-plugin.version>3.5.0.1254</sonar-maven-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    </properties>

    <url>https://github.com/igia/igia-commons/</url>

    <licenses>
        <license>
            <name>Mozilla Public License, version 2.0</name>
            <url>https://github.com/igia/igia-commons/blob/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <organization>
        <name>igia</name>
        <url>http://igia.io</url>
    </organization>
    <developers>
        <developer>
            <id>igia</id>
            <name>igia development team</name>
            <url>http://igia.io/</url>
            <organization>igia</organization>
            <organizationUrl>http://igia.io/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/igia/igia-commons/</connection>
        <url>https://github.com/igia/igia-commons/</url>
    </scm>

	<repositories>
		<repository>
			<id>nexus-public</id>
			<url> https://oss.sonatype.org/content/groups/public/</url>
		</repository>
		<repository>
			<id>nexus-staging</id>
			<url> https://oss.sonatype.org/content/groups/staging/</url>
		</repository>
	</repositories>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
	</distributionManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
            </plugin>

            <!-- for deploy -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
            </plugin>
                        <!-- igia-added-plugins -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>HEADER</header>

                    <includes>
                        <include>**/*.*</include>
                    </includes>
                    <excludes>
                        <exclude>node_modules/**/*</exclude>
                        <exclude>node/**/*</exclude>
                        <exclude>target/**/*</exclude>
                        <exclude>.mvn/**/*</exclude>
                        <exclude>.settings/**/*</exclude>
                        <exclude>.vscode/**/*</exclude>
                        <exclude>**/*.md</exclude>
                        <exclude>**/*.csv</exclude>
                        <exclude>**/*.p12</exclude>
                        <exclude>**/robots.txt</exclude>
                        <exclude>**/banner.txt</exclude>
                        <exclude>**/manifest.*</exclude>
                        <exclude>**/.dockerignore</exclude>
                        <exclude>LICENSE</exclude>
                        <exclude>HEADER</exclude>
                        <exclude>.gitattributes</exclude>
                        <exclude>.huskyrc</exclude>
                        <exclude>.prettierrc</exclude>
                        <exclude>.prettierignore</exclude>
                        <exclude>.factorypath</exclude>
                        <exclude>yarn.lock</exclude>
                        <exclude>mvnw.cmd</exclude>
                        <!-- bypass temporary files created during Jenkins build -->
                        <exclude>env.txt</exclude>
                    </excludes>
                    <mapping>
                        <scss>JAVADOC_STYLE</scss>
                        <ts>SLASHSTAR_STYLE</ts>
                        <feature>SCRIPT_STYLE</feature>
                        <cmmn>XML_STYLE</cmmn>
                        <dmn>XML_STYLE</dmn>
                        <conf>SCRIPT_STYLE</conf>
                        <factories>JAVADOC_STYLE</factories>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
                            </configuration>
                        </execution>
                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
                                <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${maven-eclipse-plugin.version}</version>
                    <configuration>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>enforce-dependencyConvergence</id>
                            <configuration>
                                <rules>
                                    <DependencyConvergence />
                                </rules>
                                <fail>false</fail>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>                            
                        </execution>
                    </executions>
                    <configuration>
                        <rules>
                            <requireMavenVersion>
                                <message>You are running an older version of Maven. JHipster requires at least Maven ${maven.version}</message>
                                <version>[${maven.version},)</version>
                            </requireMavenVersion>
                            <requireJavaVersion>
                                <message>You are running an older version of Java. JHipster requires at least JDK ${java.version}</message>
                                <version>[${java.version}.0,)</version>
                            </requireJavaVersion>
                        </rules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                    </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${nexus-staging-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>ossrh</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>false</autoReleaseAfterClose>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <!-- Force alphabetical order to have a reproducible build -->
                        <runOrder>alphabetical</runOrder>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
